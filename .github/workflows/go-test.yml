# File managed by web3-bot. DO NOT EDIT.
# See https://github.com/protocol/.github/ for details.

name: Go Test

on:
  pull_request:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event_name == 'push' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu", "windows", "macos" ]
        go: ["1.19.x", "1.20.x"]
    env:
      COVERAGES: ""
    runs-on: ${{ fromJSON(vars[format('UCI_GO_TEST_RUNNER_{0}', matrix.os)] || format('"{0}-latest"', matrix.os)) }}
    name: ${{ matrix.os }} (go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: config
        uses: protocol/.github/.github/actions/read-config@master
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Go information
        run: |
          go version
          go env
      - name: Use msys2 on windows
        if: matrix.os == 'windows'
        shell: bash
        run: echo "C:/msys64/usr/bin" >> $GITHUB_PATH
      - name: Run repo-specific setup
        uses: ./.github/actions/go-test-setup
        if: hashFiles('./.github/actions/go-test-setup') != ''
      - name: Run tests
        if: contains(fromJSON(steps.config.outputs.json).skipOSes, matrix.os) == false
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: go test -v -shuffle=on -coverprofile=module-coverage.txt -coverpkg=./... ./...
      - name: Run tests (32 bit)
        if: matrix.os != 'macos' &&
          fromJSON(steps.config.outputs.json).skip32bit != true &&
          contains(fromJSON(steps.config.outputs.json).skipOSes, matrix.os) == false
        uses: protocol/multiple-go-modules@v1.2
        env:
          GOARCH: 386
        with:
          run: |
            export "PATH=$PATH_386:$PATH"
            go test -v -shuffle=on ./...
      - name: Run tests with race detector
        if: matrix.os == 'ubuntu' &&
          contains(fromJSON(steps.config.outputs.json).skipOSes, matrix.os) == false
        uses: protocol/multiple-go-modules@v1.2
        with:
          run: go test -v -race ./...
      - name: Collect coverage files
        shell: bash
        run: echo "COVERAGES=$(find . -type f -name 'module-coverage.txt' | tr -s '\n' ',' | sed 's/,$//')" >> $GITHUB_ENV
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # v3.1.1
        with:
          files: '${{ env.COVERAGES }}'
          env_vars: OS=${{ matrix.os }}, GO=${{ matrix.go }}
