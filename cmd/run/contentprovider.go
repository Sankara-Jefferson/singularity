package run

import (
	"github.com/data-preservation-programs/singularity/database"
	"github.com/data-preservation-programs/singularity/handler"
	"github.com/data-preservation-programs/singularity/model"
	"github.com/data-preservation-programs/singularity/service"
	"github.com/urfave/cli/v2"
)

var ContentProviderCmd = &cli.Command{
	Name:  "content-provider",
	Usage: "Start a content provider that serves retrieval requests",
	Flags: []cli.Flag{
		&cli.StringFlag{
			Name:  "http-bind",
			Usage: "Address to bind the HTTP server to",
			Value: "127.0.0.1:8088",
		},
		&cli.StringFlag{
			Name:        "identity-key",
			Usage:       "The base64 encoded private key for libp2p peer",
			Value:       "",
			DefaultText: "AutoGenerated",
		},
		&cli.StringSliceFlag{
			Name:        "libp2p-listen",
			Usage:       "Addresses to listen on for libp2p connections",
			DefaultText: "AutoDetect",
		},
	},
	Action: func(c *cli.Context) error {
		db := database.MustOpenFromCLI(c)
		err := model.AutoMigrate(db)
		if err != nil {
			return handler.NewHandlerError(err)
		}

		s, err := service.NewContentProviderService(db, c.String("http-bind"),
			c.String("identity-key"),
			c.StringSlice("libp2p-listen"))
		if err != nil {
			return cli.Exit(err.Error(), 1)
		}
		s.Start()
		return nil
	},
}
